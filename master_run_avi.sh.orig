#!/bin/bash

#----------- client list ------------
clients=( wl21 wl22 wl23 wl24  )
ports=$2
#----------- run params -------------

volume_size=400G
threads=4
write_data=1500g
read_data=500g
interval=10
block_size=64k 
vol_num=128

#-------------  delete old clients
                ssh $1 -p 26 "i=\"0\"; while [ 1 -lt \`lshost|wc -l\` ]; do svctask rmhost -force \$i; i=\$[\$i+1]; done"
#-------------  add clients
		#ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff3a449a:21000024ff3a449b:21000024ff3a4478:21000024ff3a4479 -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl9 -type generic
		#ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff3a4072:21000024ff3a4073:21000024ff3a464c:21000024ff3a464d -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl10 -type generic
		#ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff499743:21000024ff38c86c:21000024ff38c86d:21000024ff499742 -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl11 -type generic
		#ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff3a45ab:21000024ff3a406b:21000024ff3adfe8:21000024ff3a45aa -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl12 -type generic
	ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff499630:21000024ff499631 -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl21 -type generic
	ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff4ad498:21000024ff4ad499 -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl22 -type generic
	ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff4ad424:21000024ff4ad425 -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl23 -type generic
	ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff4ad414:21000024ff4ad415 -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl24 -type generic

#		if [[ $ports == "4" ]] ; then
#			echo "choosed 4 ports design"
#			ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff3a4478:21000024ff3a4479:21000024ff3a4482:21000024ff3a4483 -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl9 -type generic
#			ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff3a464c:21000024ff3a464d:21000024ff3a4458:21000024ff3a4459 -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl10 -type generic
#			ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff499742:21000024ff499743:21000024ff38c86c:21000024ff38c86d -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl11 -type generic
#			ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff3a45aa:21000024ff3a45ab:21000024ff3a406a:21000024ff3a406b -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl12 -type generic
#		else
#			echo "choosed 2 ports design"
#			ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff3a4478:21000024ff3a4482 -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl9 -type generic
#			ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff3a464c:21000024ff3a4458 -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl10 -type generic
#			ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff499742:21000024ff38c86c -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl11 -type generic
#			ssh $1 -p 26 svctask mkhost -fcwwpn 21000024ff3a45aa:21000024ff3a406a -force -iogrp io_grp0:io_grp1:io_grp2:io_grp3 -name wl12 -type generic
#
#		fi
#------------ clear log
		echo "Cleaning logs"
		ssh $1 -p 26 svctask clearerrlog -force


#----------------- do a loop with all compression ratios
for CP in {1.3,1.7,2.3,3.5,11}; do
#for CP in 3.5 ; do
	mdiskid=`ssh $1 -p 26 ""lsmdiskgrp |grep -v id | sed -r 's/^[^0-9]*([0-9]+).*$/\1/'""`
        echo -e "Removing mdiskgrp id : $mdiskid from $1"
        ssh $1 -p 26 svctask rmmdiskgrp -force $mdiskid
#	
#---------- remove FC module	
#	for client in "${clients[@]}"; do
#		ssh $client rmmod qla2xxx -f
#	done
#---------- build disks

	ssh $1 -p 26 ls /home/mk_arrays_master
	if [[ $? == 0 ]]; then
		echo "Running with FAB configuration"
		#ssh $1 -p 26 /home/mk_arrays_master fc raid10 sas_hdd 168 8 21 $vol_num 500 NOSCRUB COMPRESSED
		ssh $1 -p 26 /home/mk_arrays_master fc raid10 sas_hdd 96 8 12 128 200 NOSCRUB COMPRESSED
		#ssh $1 -p 26 /home/mk_arrays_master fc raid10 sas_hdd 96 8 12 128 200 NOSCRUB
	else
		echo "Running with BFN configuration"
		#ssh $1 -p 26 /home/mk_vdisks fc 1 $vol_num 50000 0
		ssh $1 -p 26 /home/mk_vdisks fc 1 64 $vol_num 0  NOFMT COMPRESSED AUTOEXP >/dev/null
		#ssh $1 -p 26 /home/mk_vdisks fc 1 $vol_num 500000 0 
		#ssh $1 -p 26 /home/mk_vdisks fc 1 $vol_num 500000 0 COMPRESSED
#		ssh $1 -p 26 /home/mk_vdisks fc 1 $vol_num 500000 0 NOCACHE COMPRESSED
	fi
	sleep 60


#-------------  rescan multipath on clients
 
	for client in "${clients[@]}"; do
		#ssh $client /sbin/modprobe -i qla2xxx
		#if ssh $client cat "/etc/redhat-release | grep 7" ; then
		#	echo "Linux higher or equal to release 7"
		#	ssh $client service multipathd restart
		#else
		#	echo "Linux lower then release 7"
		#	ssh $client /etc/init.d/multipathd restart
		#fi
	
		echo -e "rescan on $client found: \c"
		ssh $client "multipath -F ; /root/rescan.pl"
		echo " disks"
	done

#-------------  create map of availiable disks
	echo " " > disk_list
	for client in "${clients[@]}"; do
		COUNT=1
		for LINE in `ssh $client fdisk -l |grep "Disk /dev/mapper"| awk '{print $2}' | sed s/://`; do
        		echo "sd=$client.$COUNT,hd=$client,lun=$LINE,openflags=o_direct,size=$volume_size,threads=$threads" >> disk_list
#			echo "" >> disk_list;
        		COUNT=$(( COUNT +1 ))
		done;
	done

#write  
	echo "
compratio=$CP
	
" > test
	for client in "${clients[@]}"; do
		echo "hd=$client,system=$client.eng.rtca,shell=ssh,vdbench=/root/vdbench,user=root" >> test
	done
	echo "
include=disk_list

wd=wd1,sd=*,xfersize=$block_size,rdpct=0,rhpct=0,seekpct=0
rd=run1,wd=wd1,iorate=max,elapsed=24h,maxdata=$write_data,warmup=360,interval=$interval
" >> test

	./vdbench -c -f test | tee out_$CP


#-------- take comp ratios
	./graphite_rtc_cr.py $1 | tee -a out_$CP
	sleep 120
#read
        echo "
compratio=$CP

" > test
        for client in "${clients[@]}"; do
                echo "hd=$client,system=$client.eng.rtca,shell=ssh,vdbench=/root/vdbench,user=root" >> test
        done
        echo "
include=disk_list

wd=wd1,sd=*,xfersize=$block_size,rdpct=100,rhpct=0,seekpct=0
rd=run1,wd=wd1,iorate=max,elapsed=24h,maxdata=$read_data,warmup=360,interval=$interval
" >> test

	./vdbench -c -f test | tee -a out_$CP

done

./get_vdbench_res.pl --stand=$1 -d

